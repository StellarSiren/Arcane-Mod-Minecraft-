#!/usr/bin/env sh

##############################################################################
##
##  Gradle start up script for UN*X
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_NAME="Gradle"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
    echo "$*"
}

die () {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
darwin=false
case "`uname`" in
    Darwin*) darwin=true ;;
esac

# Attempt to set MAX_FD limit to the maximum available, soft or hard limit.
if [ "$MAX_FD" != "maximum" ]; then
    MAX_FD_LIMIT=`ulimit -H -n`
    if [ $? -eq 0 ]; then
        if [ "$MAX_FD" -gt "$MAX_FD_LIMIT" ]; then
            warn "Could not set maximum file descriptor limit: $MAX_FD_LIMIT"
            MAX_FD="$MAX_FD_LIMIT"
        fi
    else
        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
    fi

    ulimit -n $MAX_FD
    if [ $? -ne 0 ]; then
        warn "Could not set maximum file descriptor limit: $MAX_FD"
    fi
fi

# For Darwin, add options to specify how the application should appear in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\""
fi

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=`which java`
    if [ -z "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Increase the maximum file descriptors if we can.
MAX_FD_LIMIT=`ulimit -H -n`
if [ $? -eq 0 ]; then
    if [ "$MAX_FD" = "maximum" ] || [ "$MAX_FD" -gt "$MAX_FD_LIMIT" ]; then
        MAX_FD="$MAX_FD_LIMIT"
    fi
fi

ulimit -n $MAX_FD
if [ $? -ne 0 ]; then
    warn "Could not set maximum file descriptor limit: $MAX_FD"
fi

# Escape application args
save () {
    for i
    do
        printf "%s\n" "$i" | sed 's/"/\\"/g'
    done
}

APP_ARGS=`save "$@"`

# Collect all arguments for the java command, following the shell quoting and escaping rules
eval set -- "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\""

exec "$JAVACMD" "$@"